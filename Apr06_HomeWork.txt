"1. Merge two sorted Arrays without extra space. 

a[] = {1,3,5,7}
b[] = {2,4,6,8}

Output
a[] = {1,2,3,4}
b[] = {5,6,7,8}

---->>>
package Apr5_class;

import java.util.Arrays;

public class sorint_odd_even02 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
	  int[] arr= {1,2,3,4,5,6,7,8,9};
	  int n=arr.length-1;
	  
	  odd_even(arr,n);
	  

	}

	private static void odd_even(int[] arr, int n) {
		// TODO Auto-generated method stub
		
		int start=0;
		int end=n;
		while(start<end)
		{
			if(arr[start]%2==1)
				start++;
			
			else
				end--;
			
			if(arr[start]%2==0 && arr[end]%2==1)
			{
				int temp=arr[start];
				arr[start]=arr[end];
				arr[end]=temp;
				
			}
		}
		System.out.println(Arrays.toString(arr));
		
	}
	

}


2. Find the index of a row containing the maximum number of 1’s in a binary matrix

Input:
 
[ 0  0  0  1  1 ]
[ 0  0  1  1  1 ]
[ 0  0  0  0  0 ]
[ 0  1  1  1  1 ]
[ 0  0  0  0  1 ]
 
Output: The maximum 1’s are present in row 4



3. Find the transpose of a given matrix. 
Transpose Matrix is formed by changing all the row elements to column elements and vice -versa

Ex-

2 3 4
5 6 4

Output:

2 5
3 6
4 4"